//Deletion in Circular Linked List
#include<stdio.h>
#include<stdlib.h>
struct CircularLinkedList{
    int data;
    struct CircularLinkedList *next;
};
typedef struct CircularLinkedList Cll;
Cll *start=NULL,*temp;
void deleteatBeg(){
    temp=start->next;
    if(start==NULL){
        printf("List is already empty");
        return;
    }
    else if(temp->next == temp){
        start=NULL;
        free(temp);
        return;
    }
    start->next=temp->next;
    free(temp);
}
void deleteatEnd(){
    Cll *current,*previous;
    
    if(start==NULL){
        printf("List is already empty");
        return;
    }
    else if(start->next==start){
        free(start);
    }
    else{ 
        current=start;
        while(current->next != start){
            previous=current;
            current=current->next;
        }
        free(current);
        previous->next = start;
        
    }
    
}
void deleteatPos(int pos){
    
}
void display(){
    temp=start->next;
    if(start==NULL){
        printf("List is empty");
        return;
    }
    //do while not working properly
    do{
        printf("%d->",temp->data);
        temp=temp->next;
    }while(temp != start);
     
}
void insert(int value){
    Cll *nn;
     nn=(Cll*)malloc(sizeof(Cll));
    nn->data=value;
    nn->next=NULL;
    
    if( start == NULL){
        start=nn;
        start->next=nn;
    }
    else{
        nn->next=start->next;
        start->next=nn;
    }
}    
void main(){
    int ch,value,pos;
    printf("\nPress 1: To Delete value at Beggining");
    printf("\nPress 2: To Delete value at End");
    printf("\nPress 3: To Delete value at Particular Postion");
    printf("\nPress 4: To Display All Values");
    printf("\nPress 5: To Exit the code\n");
    insert(10);
    insert(20);
    insert(30);
    insert(40);
    insert(50);
    insert(60);
    while(1){
        display();
        printf("\nEnter choice: ");
        scanf("%d",&ch);
        
        switch(ch){
        
        case 1:deleteatBeg();
        break;
        
        case 2:deleteatEnd();
        break;
        
        case 3:
       printf("\nEnter the Position:(as startong from 0) ");
        scanf("%d",&pos);
        deleteatPos(pos);
        break;                    
        
        case 4:display();
        break;
        
        case 5:exit(1);
        break;    
        
        default:printf("\nInvalid Choice");
        break;
            
        }
   }
}
